# Generated by Django 4.0.5 on 2022-06-26 03:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(error_messages={'max_length': 'Tên tối đa 30 kí tự.', 'required': 'Tên không được để trống', 'unique': 'Tên đã được người khác sử dụng.'}, max_length=30, unique=True)),
                ('email', models.EmailField(error_messages={'max_length': 'Email tối đa 50 kí tự.', 'required': 'Email không được để trống', 'unique': 'Email này đã có người sử dụng.'}, max_length=50, unique=True, verbose_name='email address')),
                ('pwd2', models.CharField(default=user.models.id_generator, max_length=6)),
                ('email_verified_at', models.BooleanField(default=False)),
                ('level', models.IntegerField(default=10)),
                ('vip_time', models.IntegerField(default=0, null=True)),
                ('profile_image', models.ImageField(blank=True, default=user.models.get_default_profile_image, max_length=255, null=True, upload_to=user.models.get_profile_image_filepath)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PathUser',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('dang_doc', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('tu_truyen', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('log', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('game', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('tui_do', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('thanh_tuu', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('ky_nang', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('tieu_phi', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('binh_luan', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('background_image', models.ImageField(blank=True, max_length=255, null=True, upload_to=user.models.get_background_image_filepath)),
                ('name_music', models.CharField(blank=True, max_length=30, null=True)),
                ('url_music', models.FileField(blank=True, max_length=255, null=True, upload_to=user.models.get_music_filepath)),
                ('des', models.CharField(blank=True, max_length=255, null=True)),
                ('game_lv', models.IntegerField(default=0)),
                ('game_lv_percent', models.IntegerField(default=0)),
                ('dong_te', models.FloatField(default=5000)),
                ('ngan_te', models.FloatField(default=0)),
                ('kim_te', models.FloatField(default=0)),
                ('m_e', models.FloatField(default=0)),
                ('cong_duc', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friends', models.ManyToManyField(blank=True, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
